name: Build and Publish Docker Image

on:
    release:
        types: [ "published" ]
    workflow_dispatch:

env:
    # Use docker.io for Docker Hub if empty
    REGISTRY: ghcr.io
    # github.repository as <account>/<repo>
    IMAGE_NAME: ${{ github.repository }}
    DOCKERFILE_PATH: ./Dockerfile
    DOCKER_BUILDKIT: 1

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            # This is used to complete the identity challenge
            # with sigstore/fulcio when running outside of PRs.
            id-token: write

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4.1.1

            -   name: Install Cosign
                uses: sigstore/cosign-installer@v3.4.0
                with:
                    cosign-release: 'v2.2.3'

            -   name: Setup Docker buildx
                uses: docker/setup-buildx-action@v3

            -   name: Log into registry ${{ env.REGISTRY }}
                uses: docker/login-action@v3.1.0
                with:
                    registry: ${{ env.REGISTRY }}
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -   name: Extract Docker metadata
                id: meta
                uses: docker/metadata-action@v5.5.1
                with:
                    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                    tags: |
                        # Use the release tag and mark as latest
                        type=semver,pattern={{version}}
                        type=raw,value=latest

            -   name: Build and push Docker image
                id: build-and-push
                uses: docker/build-push-action@v5.1.0
                with:
                    context: .
                    file: ${{ env.DOCKERFILE_PATH }}
                    push: true
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
                    # Enhanced caching
                    cache-from: |
                        type=gha
                        type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
                    cache-to: type=gha,mode=max

            -   name: Sign the published Docker image
                env:
                    COSIGN_EXPERIMENTAL: "true"
                run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign --yes {}@${{ steps.build-and-push.outputs.digest }}
